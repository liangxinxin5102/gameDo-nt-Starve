require("stategraphs/commonstates") require("stategraphs/SGcritter_common")  local actionhandlers = { }  local events = {     SGCritterEvents.OnEat(),     SGCritterEvents.OnAvoidCombat(), SGCritterEvents.OnTraitChanged(),      CommonHandlers.OnSleepEx(),     CommonHandlers.OnWakeEx(),     CommonHandlers.OnLocomote(false,true), }  local states = { }  local emotes = { { anim="emote_bounce",       timeline= { TimeEvent(13*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/buttstomp") inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/buttstomp_voice") end), TimeEvent(28*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/buttstomp") inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/buttstomp_voice") end), TimeEvent(43*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/buttstomp") inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/buttstomp_voice") end), }, }, { anim="emote_yawn",       timeline= { TimeEvent(4*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/yawn") end), }, }, { anim="emote_flame",       timeline= { TimeEvent(4*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/blink") end), TimeEvent(14*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/dragonling/emote_flame") end), }, }, }  SGCritterStates.AddIdle(states, #emotes) SGCritterStates.AddRandomEmotes(states, emotes) SGCritterStates.AddEmote(states, "cute",  { TimeEvent(7*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote") end), TimeEvent(26*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote") end), }) SGCritterStates.AddCombatEmote(states, { pre = { TimeEvent(19*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/hiss") end), }, loop = { TimeEvent(19*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/hiss") end), }, pst = { TimeEvent(19*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/hiss") end), }, }) SGCritterStates.AddPlayWithOtherCritter(states, events, { active = { TimeEvent(9*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/pounce") end), TimeEvent(20*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/pounce") end), }, passive =  { TimeEvent(60*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/pounce") end), }, }) SGCritterStates.AddEat(states,         {             TimeEvent(5*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/eat_pre") end),             TimeEvent(21*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/eat") end),         }) SGCritterStates.AddHungry(states,         {             TimeEvent(23*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/disstress") end),             TimeEvent(43*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/disstress") end),         }) SGCritterStates.AddNuzzle(states, actionhandlers, {             TimeEvent(12*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote_nuzzle") end),         })  SGCritterStates.AddWalkStates(states, nil, true)  local function StartFlapping(inst) end  local function RestoreFlapping(inst) end  local function StopFlapping(inst)     inst.SoundEmitter:KillSound("flying") end  local function CleanupIfSleepInterrupted(inst)     if not inst.sg.statemem.continuesleeping then         RestoreFlapping(inst)     end end  SGCritterStates.AddPetEmote(states,  { TimeEvent(9*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote_nuzzle") end), })  CommonStates.AddSleepExStates(states, { starttimeline = { TimeEvent(9*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote_nuzzle") end), }, sleeptimeline =  { TimeEvent(9*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote_nuzzle") end), }, endtimeline =  { TimeEvent(9*FRAMES, function(inst) inst.SoundEmitter:PlaySound("dontstarve_DLC001/creatures/together/kittington/emote_nuzzle") end), }, },         {             onexitsleep = CleanupIfSleepInterrupted,             onexitsleeping = CleanupIfSleepInterrupted,             onexitwake = RestoreFlapping,             onwake = StopFlapping,         })  return StateGraph("SGcritter_sakurapet", states, events, "idle", actionhandlers) 